@model Cinema.Models.Pelicula
@using Cinema.Models

@{
    var clasificaciones = Enum.GetValues(typeof(Clasificacion)).Cast<Clasificacion>().ToList();
}

<div class="container mt-3">
    <h3 class="mb-4">Crear Película</h3>
    <form asp-action="Crear" method="post" enctype="multipart/form-data" class="needs-validation" novalidate>
        <!-- Campo para el nombre -->
        <div class="mb-3">
            <label asp-for="Nombre" class="form-label">Nombre</label>
            <input asp-for="Nombre" class="form-control" required />
            <div class="invalid-feedback">
                Por favor, ingrese el nombre de la película.
            </div>
        </div>

        <!-- Campo para la duración -->
        <div class="mb-3">
            <label asp-for="Duracion" class="form-label">Duración (minutos)</label>
            <input asp-for="Duracion" class="form-control" required />
            <div class="invalid-feedback">
                Por favor, ingrese la duración de la película.
            </div>
        </div>

        <!-- Campo para la clasificación -->
        <div class="mb-3">
            <label asp-for="Clasificacion" class="form-label">Clasificación</label>
            <select asp-for="Clasificacion" class="form-select" required>
                <option value="">Selecciona una clasificación</option>
                @foreach (var clasificacion in clasificaciones)
                {
                    <option value="@clasificacion.ToString()">@clasificacion</option>
                }
            </select>
            <div class="invalid-feedback">
                Por favor, seleccione una clasificación de la lista.
            </div>
        </div>

        <!-- Campo para la descripción -->
        <div class="mb-3">
            <label asp-for="Descripcion" class="form-label">Descripción</label>
            <textarea asp-for="Descripcion" class="form-control" rows="5" required></textarea>
            <div class="invalid-feedback">
                Por favor, ingrese la descripción de la película.
            </div>
        </div>

        <!-- Campo para el póster -->
        <div class="mb-3">
            <label class="form-label">Póster</label>
            <input type="file" name="posterFile" class="form-control" required />
            <div class="invalid-feedback">
                Por favor, suba el póster de la película.
            </div>
            <img id="posterPreview" src="" alt="Póster" class="img-thumbnail" style="max-width: 150px; display: none;" />
            <script>
                document.querySelector('input[name="posterFile"]').addEventListener('change', function () {
                    var file = this.files[0];
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        document.querySelector('#posterPreview').src = e.target.result;
                        document.querySelector('#posterPreview').style.display = 'block';
                    };
                    reader.readAsDataURL(file);
                });
            </script>
        </div>

        <!-- Botón para guardar la película -->
        <button type="submit" class="btn btn-primary">
            <i class="bi bi-save"></i> Guardar
        </button>
    </form>
</div>

@section Scripts {
    <script>
        // Bootstrap validation script
        (function () {
            'use strict'
            var forms = document.querySelectorAll('.needs-validation')
            Array.prototype.slice.call(forms)
                .forEach(function (form) {
                    form.addEventListener('submit', function (event) {
                        if (!form.checkValidity()) {
                            event.preventDefault()
                            event.stopPropagation()
                        }
                        form.classList.add('was-validated')
                    }, false)
                })
        })()
    </script>
}